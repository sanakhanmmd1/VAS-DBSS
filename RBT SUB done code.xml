<?xml version="1.0" encoding="UTF-8"?>
<sequence name="ECARE_INSEQUENCE_RBT_DBSS_SUBSCRIBE" xmlns="http://ws.apache.org/ns/synapse">
	<log level="custom">
		<property name="In ECARE_INSEQUENCE_RBT_SUBSCRIBE Sequence" value="***************************"/>
		<property expression="json-eval($.msisdn)" name="MSISDN" xmlns:ns="http://org.apache.synapse/xsd"/>
		<property expression="json-eval($.tokenId)" name="TokenId" xmlns:ns="http://org.apache.synapse/xsd"/>
	</log>
	<log level="full"/>
	<property expression="json-eval($.tokenId)" name="TokenId" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="json-eval($.msisdn)" name="MSISDN" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="json-eval($.transaction_id)" name="TRANSACTION_ID" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="fn:substring-after(get-property('MessageID'),'urn:uuid:')" name="TRANSACTION_ID" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="get-property(&quot;SYSTEM_DATE&quot;, &quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;)" name="TIMESTAMP" scope="default" xmlns:ns="http://org.apache.synapse/xsd"/>
	<payloadFactory media-type="json">
		<format>{"data":{"type":"products","id":"$1","meta":{"services":{},"channel":"BSSAPI"}}}</format>
		<args>
			<arg evaluator="xml" expression="$ctx:TokenId" literal="false" xmlns:ns="http://org.apache.synapse/xsd"/>
		</args>
	</payloadFactory>
	<property name="ContentType" scope="axis2" value="application/vnd.api+json"/>
	<property name="cachecontrol" scope="axis2" value="nocache"/>
	<property expression="$ctx:MSISDN" name="uri.var.msisdn" xmlns:ns="http://org.apache.synapse/xsd"/>
	<log level="full">
		<property name="In ECARE_INSEQUENCE_RBT_SUBSCRIBE Sequence" value="*************Before Calling Endpoint**************"/>
	</log>
	<call>
		<endpoint key="DBSS_Activation"/>
	</call>
	<script language="js">
		<![CDATA[java.lang.Thread.sleep(5000);]]></script>
	<property expression="json-eval($.data.[0].attributes.href)" name="Account" xmlns:ns="http://org.apache.synapse/xsd"/>
	<log level="full">
		<property name="AFTER" value="CALLING"/>
		<property expression="json-eval($.errors.[0].detail)" name="ERROR_detail" xmlns:ns="http://org.apache.synapse/xsd"/>
		<property expression="json-eval($.errors.[0].status)" name="ERROR_status" xmlns:ns="http://org.apache.synapse/xsd"/>
		<property expression="json-eval($.data.[0].attributes.href)" name="Response_URL" xmlns:ns="http://org.apache.synapse/xsd"/>
		<property expression="fn:substring-after($ctx:Account,'ts/')" name="ACCOUNT" xmlns:ns="http://org.apache.synapse/xsd"/>
	</log>
	<property expression="json-eval($.errors.[0].detail)" name="ERROR_detail" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="json-eval($.errors.[0].status)" name="ERROR_status" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="json-eval($.data.[0].attributes.href)" name="Response_URL" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="fn:substring-after($ctx:Account,'/api/v1/requests/')" name="Response_URL" xmlns:ns="http://org.apache.synapse/xsd"/>
	<filter regex="true" source="boolean(get-property('Response_URL'))" xmlns:ns="http://org.apache.synapse/xsd">
		<then>
			<log level="full">
				<property name="BEFORE CALLING GET" value="------ STARTED ------"/>
			</log>
			<property expression="json-eval($)" name="JSON_RESPONSE"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default"/>
			<property name="LOG_RESPONSE_STATUS" value="OK"/>
			<sequence key="ECARE_LOG_RESPONSE"/>
			<property name="API_NAME" value="DBSS"/>
			<property name="INTERFACE_NAME" value="ACTIVATION_ASYN"/>
			<property expression="$ctx:Response_URL" name="RESOURCE_URI"/>
			<property expression="$ctx:TRANSACTION_ID" name="TRANSACTION_ID"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default"/>
			<property expression="$ctx:MSISDN" name="REQUEST"/>
			<property expression="fn:substring-after(get-property('MessageID'),'urn:uuid:')" name="MESSAGE_ID"/>
			<sequence key="ECARE_LOG_REQUEST"/>
			<property expression="$ctx:Response_URL" name="uri.var.Response_URL"/>
			<call>
				<endpoint key="ECARE_OFFER_ACTIVATION_DBSS_GET_EP"/>
			</call>
			<log level="full">
				<property expression="json-eval($.data.attributes.status)" name="Response_STATUS"/>
			</log>
			<property expression="json-eval($.data.attributes.status)" name="Response_STATUS"/>
			<filter regex="done" source="get-property('Response_STATUS')">
				<then>
					<property expression="json-eval($)" name="JSON_RESPONSE"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default"/>
					<property name="LOG_RESPONSE_STATUS" value="OK"/>
					<sequence key="ECARE_LOG_RESPONSE"/>
					<payloadFactory media-type="json">
						<format>{{"transactionId":"$1"}}</format>
						<args>
							<arg evaluator="xml" expression="$ctx:TRANSACTION_ID" literal="false"/>
						</args>
					</payloadFactory>
					<property name="messageType" scope="axis2" type="STRING" value="application/json"/>
					<property name="API_NAME" value="ECARE"/>
					<property name="INTERFACE_NAME" value="SUBSCRIBED_OFFER"/>
					<property expression="json-eval($)" name="JSON_RESPONSE"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default"/>
					<property name="LOG_RESPONSE_STATUS" value="OK"/>
					<sequence key="ECARE_LOG_RESPONSE"/>
					<respond/>
				</then>
				<else>
					<property expression="json-eval($)" name="JSON_RESPONSE"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default"/>
					<property name="LOG_RESPONSE_STATUS" value="KO"/>
					<sequence key="ECARE_LOG_RESPONSE"/>
					<payloadFactory media-type="json">
						<format>{"error":{"errorCode":"$1","description":"$2","message": "","transaction":{"transactionId":"$3"}}}</format>
						<args>
							<arg evaluator="xml" expression="$ctx:ERROR_status" literal="false"/>
							<arg evaluator="xml" expression="$ctx:Response_STATUS" literal="false"/>
							<arg evaluator="xml" expression="$ctx:TRANSACTION_ID" literal="false"/>
						</args>
					</payloadFactory>
					<property name="messageType" scope="axis2" type="STRING" value="application/json"/>
					<property name="API_NAME" value="ECARE"/>
					<property name="INTERFACE_NAME" value="SUBSCRIBED_OFFER"/>
					<property expression="json-eval($)" name="JSON_RESPONSE"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default"/>
					<property name="LOG_RESPONSE_STATUS" value="KO"/>
					<sequence key="ECARE_LOG_RESPONSE"/>
					<respond/>
				</else>
			</filter>
		</then>
		<else>
			<property expression="json-eval($)" name="JSON_RESPONSE"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default"/>
			<property name="LOG_RESPONSE_STATUS" value="KO"/>
			<sequence key="ECARE_LOG_RESPONSE"/>
			<payloadFactory media-type="json">
				<format>{"error":{"errorCode":"$1","description":"$2","message":"","transaction":{"transactionId": "$3"}}}</format>
				<args>
					<arg evaluator="xml" expression="$ctx:ERROR_status" literal="false"/>
					<arg evaluator="xml" expression="$ctx:ERROR_detail" literal="false"/>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID" literal="false"/>
				</args>
			</payloadFactory>
			<property name="messageType" scope="axis2" type="STRING" value="application/json"/>
			<property name="API_NAME" value="ECARE"/>
			<property name="INTERFACE_NAME" value="SUBSCRIBED_OFFER"/>
			<property expression="json-eval($)" name="JSON_RESPONSE"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default"/>
			<property name="LOG_RESPONSE_STATUS" value="KO"/>
			<sequence key="ECARE_LOG_RESPONSE"/>
			<respond/>
		</else>
	</filter>
	<respond/>
</sequence>
